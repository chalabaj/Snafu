#!/bin/bash
# Launching script for SNAFU code
# Written for SGE queuing system
# The queue part should be modified for your node names
# Resulting file r.$name should be modified if one uses diferent queuing system

function PrintHelp {
   echo " "
   echo "USAGE: 'launchSNAFU nproc que' "
   exit 1
}
                              
name="snafu"
        
nproc=$1
echo $nproc

if ! [[ $nproc =~ ^[1-9]+$ ]] ; then
   echo "error: Nproc is not an integer number" 
   PrintHelp
fi

# WHICH QUEUE:
cluster=$(uname -a | awk {'print $2'})
if [[ ! -n "$2" ]]; then
if [ "$cluster" = "as67-1" ]; then
   queue='sq-8-16'
elif [ "$cluster" == "403-a324-01" ]; then
   queue='aq'
elif [ "$cluster" = "403-as67-01" ]; then
   queue='nq'
fi
else 
queue=$2
echo $queue
fi

# RESTART PART - CREATING BACKUP OF OUTPUT FILES
# move to restart module
N=0
while [[ -d "PREV_RUN${N}" ]] ; do
          N=$(($N+1))
done
grep "restart = [0-9]" input.in
if [[ $? -eq 0 ]];then
  restart=$(grep "restart = [0-9]" input.in | awk '{print $3}')
  if [[ $restart -ne "0" ]];then
       mkdir PREV_RUN${N}
       cp movie.xyz energies.dat restart*.in input.in state.dat snafu.out velocities.xyz PES.dat PREV_RUN${N}/.
       echo "DATA COPIED TO PREV_RUN${N}"
  fi
else
    echo "Wrong restart option in input.in file"
    echo "Required format must be restart = X including spaces."
fi


# FILE SUBMITTED TO QUE (SGE-like)

cat > r.$name << EOF
#!/bin/bash

#$ -V
#$ -cwd
#$ -pe shm $nproc 
#$ -notify

export OMP_NUM_THREADS=1
SNAFUS $input
EOF

echo "   SSSSSSSSSSSSSSS NNNNNNNN        NNNNNNNN               AAA               FFFFFFFFFFFFFFFFFFFFFFUUUUUUUU     UUUUUUUU";
echo " SS:::::::::::::::SN:::::::N       N::::::N              A:::A              F::::::::::::::::::::FU::::::U     U::::::U";
echo "S:::::SSSSSS::::::SN::::::::N      N::::::N             A:::::A             F::::::::::::::::::::FU::::::U     U::::::U";
echo "S:::::S     SSSSSSSN:::::::::N     N::::::N            A:::::::A            FF::::::FFFFFFFFF::::FUU:::::U     U:::::UU";
echo "S:::::S            N::::::::::N    N::::::N           A:::::::::A             F:::::F       FFFFFF U:::::U     U:::::U ";
echo "S:::::S            N:::::::::::N   N::::::N          A:::::A:::::A            F:::::F              U:::::D     D:::::U ";
echo " S::::SSSS         N:::::::N::::N  N::::::N         A:::::A A:::::A           F::::::FFFFFFFFFF    U:::::D     D:::::U ";
echo "  SS::::::SSSSS    N::::::N N::::N N::::::N        A:::::A   A:::::A          F:::::::::::::::F    U:::::D     D:::::U ";
echo "    SSS::::::::SS  N::::::N  N::::N:::::::N       A:::::A     A:::::A         F:::::::::::::::F    U:::::D     D:::::U ";
echo "       SSSSSS::::S N::::::N   N:::::::::::N      A:::::AAAAAAAAA:::::A        F::::::FFFFFFFFFF    U:::::D     D:::::U ";
echo "            S:::::SN::::::N    N::::::::::N     A:::::::::::::::::::::A       F:::::F              U:::::D     D:::::U ";
echo "            S:::::SN::::::N     N:::::::::N    A:::::AAAAAAAAAAAAA:::::A      F:::::F              U::::::U   U::::::U ";
echo "SSSSSSS     S:::::SN::::::N      N::::::::N   A:::::A             A:::::A   FF:::::::FF            U:::::::UUU:::::::U ";
echo "S::::::SSSSSS:::::SN::::::N       N:::::::N  A:::::A               A:::::A  F::::::::FF             UU:::::::::::::UU  ";
echo "S:::::::::::::::SS N::::::N        N::::::N A:::::A                 A:::::A F::::::::FF               UU:::::::::UU    ";
echo " SSSSSSSSSSSSSSS   NNNNNNNN         NNNNNNNAAAAAAA                   AAAAAAAFFFFFFFFFFF                 UUUUUUUUU      "

echo "Launching SNAFU job for $input using $nproc processors."
echo "Results will be saved to $name.out, JOB information in $name.log"
echo "qsub -cwd -V -q $queue -pe shm $nproc r.$name"
echo "-----------------------------------------"
qsub -cwd -V -q $queue -pe shm $nproc  r.$name
